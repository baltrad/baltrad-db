# Copyright 2010 Estonian Meteorological and Hydrological Institute
# 
# This file is part of baltrad-db.
# 
# baltrad-db is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
# 
# baltrad-db is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public License
# along with baltrad-db. If not, see <http://www.gnu.org/licenses/>.

Import("env", "conf")

if not conf.has_java_deps():
    if "build-java-wrapper" in map(str, BUILD_TARGETS):
        print "dependencies not met for required target 'build-java-wrapper'"
        Exit(1)
    else:
        print "skipping 'swig/SConscript', dependencies not met"

env.AppendUnique(CPPPATH=["${jdk_include_dir}", "${jdk_include_dir}/linux"])

build_dir = env.Dir(".").get_abspath()

env["JARCHDIR"] = build_dir + "/classes"
env["JAVASOURCEPATH"] = build_dir
env["JAVACLASSPATH"] = build_dir

env.Append(SWIGPATH=env["CPPPATH"])

fc_env = env.Clone()

fc_env.Append(SWIGFLAGS="-c++ -java -package eu.baltrad.fc".split())
fc_env.Append(SWIGOUTDIR=build_dir + "/eu/baltrad/fc")
fc = fc_env.SharedObject(["fc.i"])

fc_expr_env = env.Clone()
fc_expr_env.Append(SWIGFLAGS="-c++ -java -package eu.baltrad.fc.expr".split())
fc_expr_env.Append(SWIGOUTDIR=build_dir + "/eu/baltrad/fc/expr")
fc_expr = fc_expr_env.SharedObject(["fc_expr.i"])

fc_oh5_env = env.Clone()
fc_oh5_env.Append(SWIGFLAGS="-c++ -java -package eu.baltrad.fc.oh5".split())
fc_oh5_env.Append(SWIGOUTDIR=build_dir + "/eu/baltrad/fc/oh5")
fc_oh5 = fc_oh5_env.SharedObject(["fc_oh5.i"])

fc_test_env = env.Clone()
fc_test_env.Append(SWIGFLAGS="-c++ -java -package eu.baltrad.fc.test".split())
fc_test_env.Append(SWIGOUTDIR=build_dir + "/eu/baltrad/fc/test")
fc_test = fc_test_env.SharedObject(["fc_test.i"])

lib = env.SharedLibrary("#lib/brfc_java",
                        [fc, fc_expr, fc_oh5, fc_test],
                        LIBS=["brfc"])

env.Clean(lib, Dir(".").Dir("eu"))
env.Clean(lib, Dir(".").Dir("classes"))

jar = env.Command("#lib/jbrfc.jar", [fc, fc_expr, fc_oh5, fc_test],
                  "${ant_executable} "
                  "-f build.xml build")

env.Alias("build-java-wrapper", [lib, jar])

env.Install("${install_root}/lib", lib)
env.Install("${install_root}/java", jar)

# vim:filetype=python:et:ts=4:sw=4:
