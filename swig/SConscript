Import("env")

env.AppendUnique(CPPPATH=["${jdk_include_dir}", "${jdk_include_dir}/linux"])

Execute(Delete(env.Dir(".").Dir("eu")))
Execute(Mkdir(env.Dir(".").Dir("eu/baltrad/fc")))
Execute(Delete(env.Dir(".").Dir("classes")))

build_dir = env.Dir(".").get_abspath()

env["JARCHDIR"] = build_dir + "/classes"
env["JAVASOURCEPATH"] = build_dir

env.Append(SWIGPATH=env["CPPPATH"])

fc_env = env.Clone()
fc_env.Append(SWIGFLAGS="-c++ -java -package eu.baltrad.fc".split())
fc_env.Append(SWIGOUTDIR=build_dir + "/eu/baltrad/fc")
fc = fc_env.SharedObject(["fc.i"])

fc_expr_env = env.Clone()
fc_expr_env.Append(SWIGFLAGS="-c++ -java -package eu.baltrad.fc.expr".split())
fc_expr_env.Append(SWIGOUTDIR=build_dir + "/eu/baltrad/fc/expr")
fc_expr = fc_expr_env.SharedObject(["fc_expr.i"])

fc_oh5_env = env.Clone()
fc_oh5_env.Append(SWIGFLAGS="-c++ -java -package eu.baltrad.fc.oh5".split())
fc_oh5_env.Append(SWIGOUTDIR=build_dir + "/eu/baltrad/fc/oh5")
fc_oh5 = fc_oh5_env.SharedObject(["fc_oh5.i"])


lib = env.SharedLibrary("#lib/brfc_java", [fc, fc_expr, fc_oh5], LIBS=["brfc"])

confdeps = env.ConfHas("#java-wrapper-confdeps", ["jni", "qt", "hlhdf"])

env.Requires(lib, confdeps)

env.Clean(lib, Dir(".").Dir("eu"))

java = env.Java(target="classes", source=["eu", "java"])
jar = env.Jar(target="#lib/jbrfc.jar", source=["classes/eu"])

env.Alias("java-wrapper", [lib, java, jar])

env.Install("${install_root}/lib", lib)
env.Install("${install_root}/java", jar)

# vim:filetype=python:et:ts=4:sw=4:
